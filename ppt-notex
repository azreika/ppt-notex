#!/usr/bin/env python3

import argparse
import os.path
import re
import xml.etree.ElementTree as ET
import zipfile

def read_note(note_xml):
    # namespaces
    ns = {
            "a" : "http://schemas.openxmlformats.org/drawingml/2006/main",
            "p" : "http://schemas.openxmlformats.org/presentationml/2006/main",
    }

    # root
    root = ET.fromstring(note_xml)

    # cSld = common_slide_data
    # spTree = shapes_tree
    # sp = shape
    # txBody = text_body
    shapes_tree = root.find('./p:cSld/p:spTree', ns)
    notes_shape = shapes_tree.findall('p:sp', ns)[1]
    notes_text = notes_shape.find('p:txBody', ns)

    # p = paragraph
    # r = run
    # t = text
    slide_note = ""
    for paragraph in notes_text.findall('a:p', ns):
        for run in paragraph.findall('a:r', ns):
            for t in run.findall('a:t', ns):
                if t.text != None:
                    slide_note += t.text
        slide_note += "\n"

    return slide_note

def read_ppt(filename):
    with zipfile.ZipFile(filename) as zipped:
        reg = re.compile("ppt/notesSlides/notesSlide([0-9]+).xml")
        notes_slides = list(filter(reg.match, zipped.namelist()))

        notes = ['' for x in notes_slides]
        for zipped_slide in notes_slides:
            slide_number = int(reg.match(zipped_slide).group(1))
            with zipped.open(zipped_slide) as slide:
                notes[slide_number-1] = read_note(slide.read())

        return notes


def format_notes(notes, numbering, delimiter):
    if numbering:
        notes = ["Slide {}:\n{}".format(i+1, notes[i]) for i in range(len(notes))]
    return delimiter.join(notes)


def main():
    # set up argument parser
    arg_parser = argparse.ArgumentParser(prog='./ppt-notex',
            description="PPT Notes Extractor")

    # FILE
    arg_parser.add_argument("FILE",
            help="PowerPoint file to extract notes from")

    # --output <FILE>
    arg_parser.add_argument("-o", "--output",
            help="output to the given file (stdout if unspecified)",
            metavar="FILE", default=None)

    # --numbering
    arg_parser.add_argument("-n", "--numbering",
            help="prepend each note with the slide number", action="store_true")

    # --delimiter
    arg_parser.add_argument("-d", "--delimiter",
            help="add delimiter between the notes of each slide", default="\n")

    # parse arguments
    args = arg_parser.parse_args()
    filename = args.FILE
    out_file = args.output
    numbering = args.numbering
    delimiter = args.delimiter.encode().decode('unicode_escape')

    # check if the file exists
    if not os.path.isfile(filename):
        print("Error: file '{}' does not exist".format(filename))
        return

    # read notes from the document in an ordered form
    notes = read_ppt(filename)

    # format the notes appropriately
    output = format_notes(notes, numbering, delimiter)

    # write the notes
    if out_file:
        with open(out_file, "w") as out:
            out.write(output)
    else:
        print(output)


if __name__ == "__main__":
    main()
